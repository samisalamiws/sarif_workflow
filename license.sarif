{
    "version": "2.1.0",
    "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
    "runs": [
        {
            "tool": {
                "driver": {
                    "fullName": "MEND Scanner",
                    "informationUri": "https://www.whitesourcesoftware.com",
                    "name": "Mend",
                    "rules": [
                        {
                            "id": "CVE-2022-4203",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-4203"
                            },
                            "fullDescription": {
                                "text": "A read buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. The read buffer overrun might result in a crash which could lead to a denial of service attack. In theory it could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext) although we are not aware of any working exploit leading to memory contents disclosure as of the time of release of this advisory. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-4203",
                            "help": {
                                "text": "Vulnerability CVE-2022-4203\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4203](https://www.mend.io/vulnerability-database/CVE-2022-4203)\nA read buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. The read buffer overrun might result in a crash which could lead to a denial of service attack. In theory it could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext) although we are not aware of any working exploit leading to memory contents disclosure as of the time of release of this advisory. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
                                "markdown": "**Vulnerability CVE-2022-4203**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.8-r0|[CVE-2022-4203](https://www.mend.io/vulnerability-database/CVE-2022-4203)|\n\nA read buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. The read buffer overrun might result in a crash which could lead to a denial of service attack. In theory it could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext) although we are not aware of any working exploit leading to memory contents disclosure as of the time of release of this advisory. In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects."
                            },
                            "properties": {
                                "security-severity": "4.9",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2022-4304",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-4304"
                            },
                            "fullDescription": {
                                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-4304",
                            "help": {
                                "text": "Vulnerability CVE-2022-4304\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)\nA timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
                                "markdown": "**Vulnerability CVE-2022-4304**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.8-r0|[CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)|\n\nA timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection."
                            },
                            "properties": {
                                "security-severity": "5.9",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2022-4450",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-4450"
                            },
                            "fullDescription": {
                                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-4450",
                            "help": {
                                "text": "Vulnerability CVE-2022-4450\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
                                "markdown": "**Vulnerability CVE-2022-4450**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.8-r0|[CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)|\n\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0215",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0215"
                            },
                            "fullDescription": {
                                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0215",
                            "help": {
                                "text": "Vulnerability CVE-2023-0215\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n",
                                "markdown": "**Vulnerability CVE-2023-0215**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.8-r0|[CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)|\n\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0216",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0216"
                            },
                            "fullDescription": {
                                "text": "An invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions. The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0216",
                            "help": {
                                "text": "Vulnerability CVE-2023-0216\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0216](https://www.mend.io/vulnerability-database/CVE-2023-0216)\nAn invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions. The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data.",
                                "markdown": "**Vulnerability CVE-2023-0216**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.8-r0|[CVE-2023-0216](https://www.mend.io/vulnerability-database/CVE-2023-0216)|\n\nAn invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions. The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0217",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0217"
                            },
                            "fullDescription": {
                                "text": "An invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack. The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0217",
                            "help": {
                                "text": "Vulnerability CVE-2023-0217\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0217](https://www.mend.io/vulnerability-database/CVE-2023-0217)\nAn invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack. The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3.",
                                "markdown": "**Vulnerability CVE-2023-0217**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.8-r0|[CVE-2023-0217](https://www.mend.io/vulnerability-database/CVE-2023-0217)|\n\nAn invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack. The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0286",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0286"
                            },
                            "fullDescription": {
                                "text": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0286",
                            "help": {
                                "text": "Vulnerability CVE-2023-0286\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)\nThere is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
                                "markdown": "**Vulnerability CVE-2023-0286**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.8-r0|[CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)|\n\nThere is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network."
                            },
                            "properties": {
                                "security-severity": "7.4",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0401",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0401"
                            },
                            "fullDescription": {
                                "text": "A NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash. The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider. PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0401",
                            "help": {
                                "text": "Vulnerability CVE-2023-0401\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0401](https://www.mend.io/vulnerability-database/CVE-2023-0401)\nA NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash. The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider. PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data.",
                                "markdown": "**Vulnerability CVE-2023-0401**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.8-r0|[CVE-2023-0401](https://www.mend.io/vulnerability-database/CVE-2023-0401)|\n\nA NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash. The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider. PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0464",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0464"
                            },
                            "fullDescription": {
                                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0464",
                            "help": {
                                "text": "Vulnerability CVE-2023-0464\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.8-r1\nLink: [CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                                "markdown": "**Vulnerability CVE-2023-0464**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.8-r1|[CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)|\n\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0465",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0465"
                            },
                            "fullDescription": {
                                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0465",
                            "help": {
                                "text": "Vulnerability CVE-2023-0465\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.8-r2\nLink: [CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                                "markdown": "**Vulnerability CVE-2023-0465**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.8-r2|[CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)|\n\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "properties": {
                                "security-severity": "5.3",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0466",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0466"
                            },
                            "fullDescription": {
                                "text": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0466",
                            "help": {
                                "text": "Vulnerability CVE-2023-0466\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.8-r3\nLink: [CVE-2023-0466](https://www.mend.io/vulnerability-database/CVE-2023-0466)\nThe function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
                                "markdown": "**Vulnerability CVE-2023-0466**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.8-r3|[CVE-2023-0466](https://www.mend.io/vulnerability-database/CVE-2023-0466)|\n\nThe function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications."
                            },
                            "properties": {
                                "security-severity": "5.3",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-1255",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-1255"
                            },
                            "fullDescription": {
                                "text": "Issue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-1255",
                            "help": {
                                "text": "Vulnerability CVE-2023-1255\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.8-r4\nLink: [CVE-2023-1255](https://www.mend.io/vulnerability-database/CVE-2023-1255)\nIssue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one.",
                                "markdown": "**Vulnerability CVE-2023-1255**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.8-r4|[CVE-2023-1255](https://www.mend.io/vulnerability-database/CVE-2023-1255)|\n\nIssue summary: The AES-XTS cipher decryption implementation for 64 bit ARM\nplatform contains a bug that could cause it to read past the input buffer,\nleading to a crash.\n\nImpact summary: Applications that use the AES-XTS algorithm on the 64 bit ARM\nplatform can crash in rare circumstances. The AES-XTS algorithm is usually\nused for disk encryption.\n\nThe AES-XTS cipher decryption implementation for 64 bit ARM platform will read\npast the end of the ciphertext buffer if the ciphertext size is 4 mod 5 in 16\nbyte blocks, e.g. 144 bytes or 1024 bytes. If the memory after the ciphertext\nbuffer is unmapped, this will trigger a crash which results in a denial of\nservice.\n\nIf an attacker can control the size and location of the ciphertext buffer\nbeing decrypted by an application using AES-XTS on 64 bit ARM, the\napplication is affected. This is fairly unlikely making this issue\na Low severity one."
                            },
                            "properties": {
                                "security-severity": "5.9",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-2650",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-2650"
                            },
                            "fullDescription": {
                                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-2650",
                            "help": {
                                "text": "Vulnerability CVE-2023-2650\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 3.0.9-r0\nLink: [CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
                                "markdown": "**Vulnerability CVE-2023-2650**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|3.0.9-r0|[CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)|\n\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-2975",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-2975"
                            },
                            "fullDescription": {
                                "text": "Issue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be mislead by removing\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-2975",
                            "help": {
                                "text": "Vulnerability CVE-2023-2975\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.9-r2\nLink: [CVE-2023-2975](https://www.mend.io/vulnerability-database/CVE-2023-2975)\nIssue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be mislead by removing\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue.",
                                "markdown": "**Vulnerability CVE-2023-2975**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.9-r2|[CVE-2023-2975](https://www.mend.io/vulnerability-database/CVE-2023-2975)|\n\nIssue summary: The AES-SIV cipher implementation contains a bug that causes\nit to ignore empty associated data entries which are unauthenticated as\na consequence.\n\nImpact summary: Applications that use the AES-SIV algorithm and want to\nauthenticate empty data entries as associated data can be mislead by removing\nadding or reordering such empty entries as these are ignored by the OpenSSL\nimplementation. We are currently unaware of any such applications.\n\nThe AES-SIV algorithm allows for authentication of multiple associated\ndata entries along with the encryption. To authenticate empty data the\napplication has to call EVP_EncryptUpdate() (or EVP_CipherUpdate()) with\nNULL pointer as the output buffer and 0 as the input buffer length.\nThe AES-SIV implementation in OpenSSL just returns success for such a call\ninstead of performing the associated data authentication operation.\nThe empty data thus will not be authenticated.\n\nAs this issue does not affect non-empty associated data authentication and\nwe expect it to be rare for an application to use empty associated data\nentries this is qualified as Low severity issue."
                            },
                            "properties": {
                                "security-severity": "5.3",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-3446",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-3446"
                            },
                            "fullDescription": {
                                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-3446",
                            "help": {
                                "text": "Vulnerability CVE-2023-3446\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.9-r3\nLink: [CVE-2023-3446](https://www.mend.io/vulnerability-database/CVE-2023-3446)\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                                "markdown": "**Vulnerability CVE-2023-3446**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.9-r3|[CVE-2023-3446](https://www.mend.io/vulnerability-database/CVE-2023-3446)|\n\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
                            },
                            "properties": {
                                "security-severity": "5.3",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-3817",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-3817"
                            },
                            "fullDescription": {
                                "text": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-3817",
                            "help": {
                                "text": "Vulnerability CVE-2023-3817\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 3.0.10-r0\nLink: [CVE-2023-3817](https://www.mend.io/vulnerability-database/CVE-2023-3817)\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
                                "markdown": "**Vulnerability CVE-2023-3817**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|3.0.10-r0|[CVE-2023-3817](https://www.mend.io/vulnerability-database/CVE-2023-3817)|\n\nIssue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue."
                            },
                            "properties": {
                                "security-severity": "5.3",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "gcp-service-account",
                            "name": "secret_finding",
                            "shortDescription": {
                                "text": "gcp-service-account"
                            },
                            "fullDescription": {
                                "text": "Google (GCP) Service-account"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "Secret gcp-service-account\nSeverity: CRITICAL\nDescription: Google (GCP) Service-account\nFile Path: tmp/alphabet.json\n",
                                "markdown": "**Secret gcp-service-account**\n| Severity | Description | File Path |\n| --- | --- | --- |\n|CRITICAL|Google (GCP) Service-account|tmp/alphabet.json|"
                            },
                            "properties": {
                                "security-severity": "4",
                                "tags": [
                                    "secret",
                                    "security",
                                    "CRITICAL"
                                ]
                            }
                        },
                        {
                            "id": "aws-access-key-id",
                            "name": "secret_finding",
                            "shortDescription": {
                                "text": "aws-access-key-id"
                            },
                            "fullDescription": {
                                "text": "AWS Access Key ID"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "Secret aws-access-key-id\nSeverity: CRITICAL\nDescription: AWS Access Key ID\nFile Path: tmp/secret.cs\n",
                                "markdown": "**Secret aws-access-key-id**\n| Severity | Description | File Path |\n| --- | --- | --- |\n|CRITICAL|AWS Access Key ID|tmp/secret.cs|"
                            },
                            "properties": {
                                "security-severity": "4",
                                "tags": [
                                    "secret",
                                    "security",
                                    "CRITICAL"
                                ]
                            }
                        },
                        {
                            "id": "github-pat",
                            "name": "secret_finding",
                            "shortDescription": {
                                "text": "github-pat"
                            },
                            "fullDescription": {
                                "text": "GitHub Personal Access Token"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "Secret github-pat\nSeverity: CRITICAL\nDescription: GitHub Personal Access Token\nFile Path: tmp/gh\n",
                                "markdown": "**Secret github-pat**\n| Severity | Description | File Path |\n| --- | --- | --- |\n|CRITICAL|GitHub Personal Access Token|tmp/gh|"
                            },
                            "properties": {
                                "security-severity": "4",
                                "tags": [
                                    "secret",
                                    "security",
                                    "CRITICAL"
                                ]
                            }
                        },
                        {
                            "id": "private-key",
                            "name": "secret_finding",
                            "shortDescription": {
                                "text": "private-key"
                            },
                            "fullDescription": {
                                "text": "Asymmetric Private Key"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "Secret private-key\nSeverity: HIGH\nDescription: Asymmetric Private Key\nFile Path: tmp/ec.pem\n",
                                "markdown": "**Secret private-key**\n| Severity | Description | File Path |\n| --- | --- | --- |\n|HIGH|Asymmetric Private Key|tmp/ec.pem|"
                            },
                            "properties": {
                                "security-severity": "3",
                                "tags": [
                                    "secret",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "GPL-2.0",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "GPL-2.0"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName alpine-baselayout\nLicense: GPL-2.0\n",
                                "markdown": "**PackageName alpine-baselayout**\n| License |\n| --- | --- | --- |\n|GPL-2.0|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        },
                        {
                            "id": "Zlib",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "Zlib"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName zlib\nLicense: Zlib\n",
                                "markdown": "**PackageName zlib**\n| License |\n| --- | --- | --- |\n|Zlib|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        },
                        {
                            "id": "MIT",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "MIT"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName alpine-keys\nLicense: MIT\n",
                                "markdown": "**PackageName alpine-keys**\n| License |\n| --- | --- | --- |\n|MIT|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        },
                        {
                            "id": "Apache-2.0",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "Apache-2.0"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName libcrypto3\nLicense: Apache-2.0\n",
                                "markdown": "**PackageName libcrypto3**\n| License |\n| --- | --- | --- |\n|Apache-2.0|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        },
                        {
                            "id": "BSD-2-Clause",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "BSD-2-Clause"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName musl-utils\nLicense: BSD-2-Clause\n",
                                "markdown": "**PackageName musl-utils**\n| License |\n| --- | --- | --- |\n|BSD-2-Clause|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        },
                        {
                            "id": "GPL-2.0+",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "GPL-2.0+"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName musl-utils\nLicense: GPL-2.0+\n",
                                "markdown": "**PackageName musl-utils**\n| License |\n| --- | --- | --- |\n|GPL-2.0+|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        },
                        {
                            "id": "MPL-2.0",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "MPL-2.0"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName ca-certificates-bundle\nLicense: MPL-2.0\n",
                                "markdown": "**PackageName ca-certificates-bundle**\n| License |\n| --- | --- | --- |\n|MPL-2.0|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        },
                        {
                            "id": "BSD-3-Clause",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "BSD-3-Clause"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName libc-utils\nLicense: BSD-3-Clause\n",
                                "markdown": "**PackageName libc-utils**\n| License |\n| --- | --- | --- |\n|BSD-3-Clause|"
                            },
                            "properties": {
                                "tags": [
                                    "license",
                                    "security"
                                ]
                            }
                        }
                    ],
                    "version": "NA"
                }
            },
            "results": [
                {
                    "ruleId": "CVE-2022-4203",
                    "ruleIndex": 0,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2022-4203\nSeverity: MEDIUM\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4203](https://www.mend.io/vulnerability-database/CVE-2022-4203)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4203",
                    "ruleIndex": 0,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2022-4203\nSeverity: MEDIUM\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4203](https://www.mend.io/vulnerability-database/CVE-2022-4203)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4304",
                    "ruleIndex": 1,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2022-4304\nSeverity: MEDIUM\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4304",
                    "ruleIndex": 1,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2022-4304\nSeverity: MEDIUM\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4450",
                    "ruleIndex": 2,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2022-4450\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4450",
                    "ruleIndex": 2,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2022-4450\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0215",
                    "ruleIndex": 3,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0215\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0215",
                    "ruleIndex": 3,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0215\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0216",
                    "ruleIndex": 4,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0216\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0216](https://www.mend.io/vulnerability-database/CVE-2023-0216)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0216",
                    "ruleIndex": 4,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0216\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0216](https://www.mend.io/vulnerability-database/CVE-2023-0216)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0217",
                    "ruleIndex": 5,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0217\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0217](https://www.mend.io/vulnerability-database/CVE-2023-0217)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0217",
                    "ruleIndex": 5,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0217\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0217](https://www.mend.io/vulnerability-database/CVE-2023-0217)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0286",
                    "ruleIndex": 6,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0286",
                    "ruleIndex": 6,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0401",
                    "ruleIndex": 7,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0401\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0401](https://www.mend.io/vulnerability-database/CVE-2023-0401)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0401",
                    "ruleIndex": 7,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0401\nSeverity: HIGH\nFixed Version: 3.0.8-r0\nLink: [CVE-2023-0401](https://www.mend.io/vulnerability-database/CVE-2023-0401)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0464",
                    "ruleIndex": 8,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0464\nSeverity: HIGH\nFixed Version: 3.0.8-r1\nLink: [CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0464",
                    "ruleIndex": 8,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0464\nSeverity: HIGH\nFixed Version: 3.0.8-r1\nLink: [CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0465",
                    "ruleIndex": 9,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0465\nSeverity: MEDIUM\nFixed Version: 3.0.8-r2\nLink: [CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0465",
                    "ruleIndex": 9,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0465\nSeverity: MEDIUM\nFixed Version: 3.0.8-r2\nLink: [CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0466",
                    "ruleIndex": 10,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0466\nSeverity: MEDIUM\nFixed Version: 3.0.8-r3\nLink: [CVE-2023-0466](https://www.mend.io/vulnerability-database/CVE-2023-0466)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0466",
                    "ruleIndex": 10,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-0466\nSeverity: MEDIUM\nFixed Version: 3.0.8-r3\nLink: [CVE-2023-0466](https://www.mend.io/vulnerability-database/CVE-2023-0466)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-1255",
                    "ruleIndex": 11,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-1255\nSeverity: MEDIUM\nFixed Version: 3.0.8-r4\nLink: [CVE-2023-1255](https://www.mend.io/vulnerability-database/CVE-2023-1255)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-1255",
                    "ruleIndex": 11,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-1255\nSeverity: MEDIUM\nFixed Version: 3.0.8-r4\nLink: [CVE-2023-1255](https://www.mend.io/vulnerability-database/CVE-2023-1255)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-2650",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-2650\nSeverity: HIGH\nFixed Version: 3.0.9-r0\nLink: [CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-2650",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-2650\nSeverity: HIGH\nFixed Version: 3.0.9-r0\nLink: [CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-2975",
                    "ruleIndex": 13,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-2975\nSeverity: MEDIUM\nFixed Version: 3.0.9-r2\nLink: [CVE-2023-2975](https://www.mend.io/vulnerability-database/CVE-2023-2975)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-2975",
                    "ruleIndex": 13,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-2975\nSeverity: MEDIUM\nFixed Version: 3.0.9-r2\nLink: [CVE-2023-2975](https://www.mend.io/vulnerability-database/CVE-2023-2975)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-3446",
                    "ruleIndex": 14,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-3446\nSeverity: MEDIUM\nFixed Version: 3.0.9-r3\nLink: [CVE-2023-3446](https://www.mend.io/vulnerability-database/CVE-2023-3446)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-3446",
                    "ruleIndex": 14,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-3446\nSeverity: MEDIUM\nFixed Version: 3.0.9-r3\nLink: [CVE-2023-3446](https://www.mend.io/vulnerability-database/CVE-2023-3446)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-3817",
                    "ruleIndex": 15,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-3817\nSeverity: MEDIUM\nFixed Version: 3.0.10-r0\nLink: [CVE-2023-3817](https://www.mend.io/vulnerability-database/CVE-2023-3817)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-3817",
                    "ruleIndex": 15,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nInstalled Version: 3.0.7-r2\nVulnerability CVE-2023-3817\nSeverity: MEDIUM\nFixed Version: 3.0.10-r0\nLink: [CVE-2023-3817](https://www.mend.io/vulnerability-database/CVE-2023-3817)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "gcp-service-account",
                    "ruleIndex": 16,
                    "level": "error",
                    "message": {
                        "text": "Secret: gcp-service-account\nSeverity: CRITICAL\nFile Path: tmp/alphabet.json\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "aws-access-key-id",
                    "ruleIndex": 17,
                    "level": "error",
                    "message": {
                        "text": "Secret: aws-access-key-id\nSeverity: CRITICAL\nFile Path: tmp/secret.cs\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "aws-access-key-id",
                    "ruleIndex": 17,
                    "level": "error",
                    "message": {
                        "text": "Secret: aws-access-key-id\nSeverity: CRITICAL\nFile Path: tmp/secret.php\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "aws-access-key-id",
                    "ruleIndex": 17,
                    "level": "error",
                    "message": {
                        "text": "Secret: aws-access-key-id\nSeverity: CRITICAL\nFile Path: tmp/secret.py\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "aws-access-key-id",
                    "ruleIndex": 17,
                    "level": "error",
                    "message": {
                        "text": "Secret: aws-access-key-id\nSeverity: CRITICAL\nFile Path: tmp/secret.js\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "aws-access-key-id",
                    "ruleIndex": 17,
                    "level": "error",
                    "message": {
                        "text": "Secret: aws-access-key-id\nSeverity: CRITICAL\nFile Path: tmp/secret.c\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "github-pat",
                    "ruleIndex": 18,
                    "level": "error",
                    "message": {
                        "text": "Secret: github-pat\nSeverity: CRITICAL\nFile Path: tmp/gh\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "github-pat",
                    "ruleIndex": 18,
                    "level": "error",
                    "message": {
                        "text": "Secret: github-pat\nSeverity: CRITICAL\nFile Path: tmp/gh_l\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "aws-access-key-id",
                    "ruleIndex": 17,
                    "level": "error",
                    "message": {
                        "text": "Secret: aws-access-key-id\nSeverity: CRITICAL\nFile Path: tmp/secret.go\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "private-key",
                    "ruleIndex": 19,
                    "level": "error",
                    "message": {
                        "text": "Secret: private-key\nSeverity: HIGH\nFile Path: tmp/ec.pem\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "private-key",
                    "ruleIndex": 19,
                    "level": "error",
                    "message": {
                        "text": "Secret: private-key\nSeverity: HIGH\nFile Path: tmp/my_ssh\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "private-key",
                    "ruleIndex": 19,
                    "level": "error",
                    "message": {
                        "text": "Secret: private-key\nSeverity: HIGH\nFile Path: tmp/id_rsa\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "private-key",
                    "ruleIndex": 19,
                    "level": "error",
                    "message": {
                        "text": "Secret: private-key\nSeverity: HIGH\nFile Path: tmp/my_key.private\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "private-key",
                    "ruleIndex": 19,
                    "level": "error",
                    "message": {
                        "text": "Secret: private-key\nSeverity: HIGH\nFile Path: tmp/id_rsa_1\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "private-key",
                    "ruleIndex": 19,
                    "level": "error",
                    "message": {
                        "text": "Secret: private-key\nSeverity: HIGH\nFile Path: tmp/alphabet.json\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0",
                    "ruleIndex": 20,
                    "level": "error",
                    "message": {
                        "text": "Package: alpine-baselayout\nLicense: GPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0",
                    "ruleIndex": 20,
                    "level": "error",
                    "message": {
                        "text": "Package: alpine-baselayout-data\nLicense: GPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0",
                    "ruleIndex": 20,
                    "level": "error",
                    "message": {
                        "text": "Package: busybox\nLicense: GPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0",
                    "ruleIndex": 20,
                    "level": "error",
                    "message": {
                        "text": "Package: apk-tools\nLicense: GPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0",
                    "ruleIndex": 20,
                    "level": "error",
                    "message": {
                        "text": "Package: busybox-binsh\nLicense: GPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "Zlib",
                    "ruleIndex": 21,
                    "level": "error",
                    "message": {
                        "text": "Package: zlib\nLicense: Zlib\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "MIT",
                    "ruleIndex": 22,
                    "level": "error",
                    "message": {
                        "text": "Package: alpine-keys\nLicense: MIT\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "Apache-2.0",
                    "ruleIndex": 23,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto3\nLicense: Apache-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0",
                    "ruleIndex": 20,
                    "level": "error",
                    "message": {
                        "text": "Package: ssl_client\nLicense: GPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0",
                    "ruleIndex": 20,
                    "level": "error",
                    "message": {
                        "text": "Package: scanelf\nLicense: GPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "Apache-2.0",
                    "ruleIndex": 23,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl3\nLicense: Apache-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "MIT",
                    "ruleIndex": 22,
                    "level": "error",
                    "message": {
                        "text": "Package: musl-utils\nLicense: MIT\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "BSD-2-Clause",
                    "ruleIndex": 24,
                    "level": "error",
                    "message": {
                        "text": "Package: musl-utils\nLicense: BSD-2-Clause\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "GPL-2.0+",
                    "ruleIndex": 25,
                    "level": "error",
                    "message": {
                        "text": "Package: musl-utils\nLicense: GPL-2.0+\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "MIT",
                    "ruleIndex": 22,
                    "level": "error",
                    "message": {
                        "text": "Package: musl\nLicense: MIT\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "MPL-2.0",
                    "ruleIndex": 26,
                    "level": "error",
                    "message": {
                        "text": "Package: ca-certificates-bundle\nLicense: MPL-2.0\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "MIT",
                    "ruleIndex": 22,
                    "level": "error",
                    "message": {
                        "text": "Package: ca-certificates-bundle\nLicense: MIT\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "BSD-2-Clause",
                    "ruleIndex": 24,
                    "level": "error",
                    "message": {
                        "text": "Package: libc-utils\nLicense: BSD-2-Clause\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "BSD-3-Clause",
                    "ruleIndex": 27,
                    "level": "error",
                    "message": {
                        "text": "Package: libc-utils\nLicense: BSD-3-Clause\n"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dorhayun/dor-alpine-secret",
                                    "uriBaseId": "ROOTPATH"
                                },
                                "region": {
                                    "startLine": 1
                                }
                            }
                        }
                    ]
                }
            ]
        }
    ]
}2