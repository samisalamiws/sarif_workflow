{
    "version": "2.1.0",
    "$schema": "https://json.schemastore.org/sarif-2.1.0-rtm.5.json",
    "runs": [
        {
            "tool": {
                "driver": {
                    "fullName": "MEND Scanner",
                    "informationUri": "https://www.whitesourcesoftware.com",
                    "name": "Mend",
                    "rules": [
                        {
                            "id": "CVE-2022-2097",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-2097"
                            },
                            "fullDescription": {
                                "text": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-2097",
                            "help": {
                                "text": "Vulnerability CVE-2022-2097\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://www.mend.io/vulnerability-database/CVE-2022-2097)\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
                                "markdown": "**Vulnerability CVE-2022-2097**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|1.1.1q-r0|[CVE-2022-2097](https://www.mend.io/vulnerability-database/CVE-2022-2097)|\n\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p)."
                            },
                            "properties": {
                                "security-severity": "5.3",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2022-30065",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-30065"
                            },
                            "fullDescription": {
                                "text": "A use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-30065",
                            "help": {
                                "text": "Vulnerability CVE-2022-30065\nSeverity: HIGH\nPackage: * busybox\nFixed Version: 1.35.0-r15\nLink: [CVE-2022-30065](https://www.mend.io/vulnerability-database/CVE-2022-30065)\nA use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function.",
                                "markdown": "**Vulnerability CVE-2022-30065**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* busybox|1.35.0-r15|[CVE-2022-30065](https://www.mend.io/vulnerability-database/CVE-2022-30065)|\n\nA use-after-free in Busybox 1.35-x's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the copyvar function."
                            },
                            "properties": {
                                "security-severity": "7.8",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2022-37434",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-37434"
                            },
                            "fullDescription": {
                                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-37434",
                            "help": {
                                "text": "Vulnerability CVE-2022-37434\nSeverity: CRITICAL\nPackage: * zlib\nFixed Version: 1.2.12-r2\nLink: [CVE-2022-37434](https://www.mend.io/vulnerability-database/CVE-2022-37434)\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                                "markdown": "**Vulnerability CVE-2022-37434**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|CRITICAL|* zlib|1.2.12-r2|[CVE-2022-37434](https://www.mend.io/vulnerability-database/CVE-2022-37434)|\n\nzlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
                            },
                            "properties": {
                                "security-severity": "9.8",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "CRITICAL"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2022-4304",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-4304"
                            },
                            "fullDescription": {
                                "text": "A timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-4304",
                            "help": {
                                "text": "Vulnerability CVE-2022-4304\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)\nA timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
                                "markdown": "**Vulnerability CVE-2022-4304**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|1.1.1t-r0|[CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)|\n\nA timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection."
                            },
                            "properties": {
                                "security-severity": "5.9",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2022-4450",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2022-4450"
                            },
                            "fullDescription": {
                                "text": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2022-4450",
                            "help": {
                                "text": "Vulnerability CVE-2022-4450\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
                                "markdown": "**Vulnerability CVE-2022-4450**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|1.1.1t-r0|[CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)|\n\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0215",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0215"
                            },
                            "fullDescription": {
                                "text": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0215",
                            "help": {
                                "text": "Vulnerability CVE-2023-0215\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n",
                                "markdown": "**Vulnerability CVE-2023-0215**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|1.1.1t-r0|[CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)|\n\nThe public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.\n\n\n\n"
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0286",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0286"
                            },
                            "fullDescription": {
                                "text": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0286",
                            "help": {
                                "text": "Vulnerability CVE-2023-0286\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)\nThere is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.",
                                "markdown": "**Vulnerability CVE-2023-0286**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|1.1.1t-r0|[CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)|\n\nThere is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network."
                            },
                            "properties": {
                                "security-severity": "7.4",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0464",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0464"
                            },
                            "fullDescription": {
                                "text": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0464",
                            "help": {
                                "text": "Vulnerability CVE-2023-0464\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 1.1.1t-r1\nLink: [CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                                "markdown": "**Vulnerability CVE-2023-0464**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|1.1.1t-r1|[CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)|\n\nA security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-0465",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-0465"
                            },
                            "fullDescription": {
                                "text": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-0465",
                            "help": {
                                "text": "Vulnerability CVE-2023-0465\nSeverity: MEDIUM\nPackage: * openssl\nFixed Version: 1.1.1t-r2\nLink: [CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
                                "markdown": "**Vulnerability CVE-2023-0465**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|MEDIUM|* openssl|1.1.1t-r2|[CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)|\n\nApplications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function."
                            },
                            "properties": {
                                "security-severity": "5.3",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        },
                        {
                            "id": "CVE-2023-2650",
                            "name": "OsPackageVulnerability",
                            "shortDescription": {
                                "text": "CVE-2023-2650"
                            },
                            "fullDescription": {
                                "text": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "helpUri": "https://www.mend.io/vulnerability-database/CVE-2023-2650",
                            "help": {
                                "text": "Vulnerability CVE-2023-2650\nSeverity: HIGH\nPackage: * openssl\nFixed Version: 1.1.1u-r0\nLink: [CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
                                "markdown": "**Vulnerability CVE-2023-2650**\n| Severity | Package | Fixed Version | Link |\n| --- | --- | --- | --- |\n|HIGH|* openssl|1.1.1u-r0|[CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)|\n\nIssue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low."
                            },
                            "properties": {
                                "security-severity": "7.5",
                                "tags": [
                                    "vulnerability",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "OpenSSL",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "OpenSSL"
                            },
                            "fullDescription": {
                                "text": "notice"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName libssl1.1\nLicense: OpenSSL\nSeverity: LOW\n",
                                "markdown": "**PackageName libssl1.1**\n| License | Severity |\n| --- | --- | --- |\n|OpenSSL|LOW|"
                            },
                            "properties": {
                                "security-severity": "1",
                                "tags": [
                                    "license",
                                    "security",
                                    "LOW"
                                ]
                            }
                        },
                        {
                            "id": "MIT",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "MIT"
                            },
                            "fullDescription": {
                                "text": "notice"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName musl\nLicense: MIT\nSeverity: LOW\n",
                                "markdown": "**PackageName musl**\n| License | Severity |\n| --- | --- | --- |\n|MIT|LOW|"
                            },
                            "properties": {
                                "security-severity": "1",
                                "tags": [
                                    "license",
                                    "security",
                                    "LOW"
                                ]
                            }
                        },
                        {
                            "id": "GPL-2.0",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "GPL-2.0"
                            },
                            "fullDescription": {
                                "text": "restricted"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName apk-tools\nLicense: GPL-2.0\nSeverity: HIGH\n",
                                "markdown": "**PackageName apk-tools**\n| License | Severity |\n| --- | --- | --- |\n|GPL-2.0|HIGH|"
                            },
                            "properties": {
                                "security-severity": "3",
                                "tags": [
                                    "license",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "BSD-2-Clause",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "BSD-2-Clause"
                            },
                            "fullDescription": {
                                "text": "notice"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName libc-utils\nLicense: BSD-2-Clause\nSeverity: LOW\n",
                                "markdown": "**PackageName libc-utils**\n| License | Severity |\n| --- | --- | --- |\n|BSD-2-Clause|LOW|"
                            },
                            "properties": {
                                "security-severity": "1",
                                "tags": [
                                    "license",
                                    "security",
                                    "LOW"
                                ]
                            }
                        },
                        {
                            "id": "BSD-3-Clause",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "BSD-3-Clause"
                            },
                            "fullDescription": {
                                "text": "notice"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName libc-utils\nLicense: BSD-3-Clause\nSeverity: LOW\n",
                                "markdown": "**PackageName libc-utils**\n| License | Severity |\n| --- | --- | --- |\n|BSD-3-Clause|LOW|"
                            },
                            "properties": {
                                "security-severity": "1",
                                "tags": [
                                    "license",
                                    "security",
                                    "LOW"
                                ]
                            }
                        },
                        {
                            "id": "Zlib",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "Zlib"
                            },
                            "fullDescription": {
                                "text": "notice"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName zlib\nLicense: Zlib\nSeverity: LOW\n",
                                "markdown": "**PackageName zlib**\n| License | Severity |\n| --- | --- | --- |\n|Zlib|LOW|"
                            },
                            "properties": {
                                "security-severity": "1",
                                "tags": [
                                    "license",
                                    "security",
                                    "LOW"
                                ]
                            }
                        },
                        {
                            "id": "BSD",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "BSD"
                            },
                            "fullDescription": {
                                "text": "notice"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName musl-utils\nLicense: BSD\nSeverity: LOW\n",
                                "markdown": "**PackageName musl-utils**\n| License | Severity |\n| --- | --- | --- |\n|BSD|LOW|"
                            },
                            "properties": {
                                "security-severity": "1",
                                "tags": [
                                    "license",
                                    "security",
                                    "LOW"
                                ]
                            }
                        },
                        {
                            "id": "GPL-2.0+",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "GPL-2.0+"
                            },
                            "fullDescription": {
                                "text": "restricted"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName musl-utils\nLicense: GPL-2.0+\nSeverity: HIGH\n",
                                "markdown": "**PackageName musl-utils**\n| License | Severity |\n| --- | --- | --- |\n|GPL-2.0+|HIGH|"
                            },
                            "properties": {
                                "security-severity": "3",
                                "tags": [
                                    "license",
                                    "security",
                                    "HIGH"
                                ]
                            }
                        },
                        {
                            "id": "MPL-2.0",
                            "name": "license_finding",
                            "shortDescription": {
                                "text": "MPL-2.0"
                            },
                            "fullDescription": {
                                "text": "reciprocal"
                            },
                            "defaultConfiguration": {
                                "level": "error"
                            },
                            "help": {
                                "text": "PackageName ca-certificates-bundle\nLicense: MPL-2.0\nSeverity: MEDIUM\n",
                                "markdown": "**PackageName ca-certificates-bundle**\n| License | Severity |\n| --- | --- | --- |\n|MPL-2.0|MEDIUM|"
                            },
                            "properties": {
                                "security-severity": "2",
                                "tags": [
                                    "license",
                                    "security",
                                    "MEDIUM"
                                ]
                            }
                        }
                    ],
                    "version": "NA"
                }
            },
            "results": [
                {
                    "ruleId": "CVE-2022-2097",
                    "ruleIndex": 0,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-2097\nSeverity: MEDIUM\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://www.mend.io/vulnerability-database/CVE-2022-2097)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-2097",
                    "ruleIndex": 0,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-2097\nSeverity: MEDIUM\nFixed Version: 1.1.1q-r0\nLink: [CVE-2022-2097](https://www.mend.io/vulnerability-database/CVE-2022-2097)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-30065",
                    "ruleIndex": 1,
                    "level": "error",
                    "message": {
                        "text": "Package: ssl_client\nInstalled Version: 1.35.0-r13\nVulnerability CVE-2022-30065\nSeverity: HIGH\nFixed Version: 1.35.0-r15\nLink: [CVE-2022-30065](https://www.mend.io/vulnerability-database/CVE-2022-30065)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-30065",
                    "ruleIndex": 1,
                    "level": "error",
                    "message": {
                        "text": "Package: busybox\nInstalled Version: 1.35.0-r13\nVulnerability CVE-2022-30065\nSeverity: HIGH\nFixed Version: 1.35.0-r15\nLink: [CVE-2022-30065](https://www.mend.io/vulnerability-database/CVE-2022-30065)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-37434",
                    "ruleIndex": 2,
                    "level": "error",
                    "message": {
                        "text": "Package: zlib\nInstalled Version: 1.2.12-r1\nVulnerability CVE-2022-37434\nSeverity: CRITICAL\nFixed Version: 1.2.12-r2\nLink: [CVE-2022-37434](https://www.mend.io/vulnerability-database/CVE-2022-37434)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4304",
                    "ruleIndex": 3,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4304\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4304",
                    "ruleIndex": 3,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4304\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4304](https://www.mend.io/vulnerability-database/CVE-2022-4304)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4450",
                    "ruleIndex": 4,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4450\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2022-4450",
                    "ruleIndex": 4,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2022-4450\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2022-4450](https://www.mend.io/vulnerability-database/CVE-2022-4450)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0215",
                    "ruleIndex": 5,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0215\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0215",
                    "ruleIndex": 5,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0215\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0215](https://www.mend.io/vulnerability-database/CVE-2023-0215)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0286",
                    "ruleIndex": 6,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0286",
                    "ruleIndex": 6,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0286\nSeverity: HIGH\nFixed Version: 1.1.1t-r0\nLink: [CVE-2023-0286](https://www.mend.io/vulnerability-database/CVE-2023-0286)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0464",
                    "ruleIndex": 7,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0464\nSeverity: HIGH\nFixed Version: 1.1.1t-r1\nLink: [CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0464",
                    "ruleIndex": 7,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0464\nSeverity: HIGH\nFixed Version: 1.1.1t-r1\nLink: [CVE-2023-0464](https://www.mend.io/vulnerability-database/CVE-2023-0464)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0465",
                    "ruleIndex": 8,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0465\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r2\nLink: [CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-0465",
                    "ruleIndex": 8,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-0465\nSeverity: MEDIUM\nFixed Version: 1.1.1t-r2\nLink: [CVE-2023-0465](https://www.mend.io/vulnerability-database/CVE-2023-0465)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-2650",
                    "ruleIndex": 9,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-2650\nSeverity: HIGH\nFixed Version: 1.1.1u-r0\nLink: [CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "CVE-2023-2650",
                    "ruleIndex": 9,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nInstalled Version: 1.1.1o-r0\nVulnerability CVE-2023-2650\nSeverity: HIGH\nFixed Version: 1.1.1u-r0\nLink: [CVE-2023-2650](https://www.mend.io/vulnerability-database/CVE-2023-2650)"
                    },
                    "locations": [
                        {
                            "physicalLocation": {
                                "artifactLocation": {
                                    "uri": "dor_alpine"
                                }
                            }
                        }
                    ]
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 10,
                    "level": "error",
                    "message": {
                        "text": "Package: libssl1.1\nLicense: OpenSSL\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 11,
                    "level": "error",
                    "message": {
                        "text": "Package: musl\nLicense: MIT\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 10,
                    "level": "error",
                    "message": {
                        "text": "Package: libcrypto1.1\nLicense: OpenSSL\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "restricted",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: apk-tools\nLicense: GPL-2.0\nSeverity: HIGH\n"
                    }
                },
                {
                    "ruleId": "restricted",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: alpine-baselayout-data\nLicense: GPL-2.0\nSeverity: HIGH\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 13,
                    "level": "error",
                    "message": {
                        "text": "Package: libc-utils\nLicense: BSD-2-Clause\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 14,
                    "level": "error",
                    "message": {
                        "text": "Package: libc-utils\nLicense: BSD-3-Clause\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 11,
                    "level": "error",
                    "message": {
                        "text": "Package: alpine-keys\nLicense: MIT\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "restricted",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: busybox\nLicense: GPL-2.0\nSeverity: HIGH\n"
                    }
                },
                {
                    "ruleId": "restricted",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: alpine-baselayout\nLicense: GPL-2.0\nSeverity: HIGH\n"
                    }
                },
                {
                    "ruleId": "restricted",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: ssl_client\nLicense: GPL-2.0\nSeverity: HIGH\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 15,
                    "level": "error",
                    "message": {
                        "text": "Package: zlib\nLicense: Zlib\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 11,
                    "level": "error",
                    "message": {
                        "text": "Package: musl-utils\nLicense: MIT\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 16,
                    "level": "error",
                    "message": {
                        "text": "Package: musl-utils\nLicense: BSD\nSeverity: LOW\n"
                    }
                },
                {
                    "ruleId": "restricted",
                    "ruleIndex": 17,
                    "level": "error",
                    "message": {
                        "text": "Package: musl-utils\nLicense: GPL-2.0+\nSeverity: HIGH\n"
                    }
                },
                {
                    "ruleId": "restricted",
                    "ruleIndex": 12,
                    "level": "error",
                    "message": {
                        "text": "Package: scanelf\nLicense: GPL-2.0\nSeverity: HIGH\n"
                    }
                },
                {
                    "ruleId": "reciprocal",
                    "ruleIndex": 18,
                    "level": "error",
                    "message": {
                        "text": "Package: ca-certificates-bundle\nLicense: MPL-2.0\nSeverity: MEDIUM\n"
                    }
                },
                {
                    "ruleId": "notice",
                    "ruleIndex": 11,
                    "level": "error",
                    "message": {
                        "text": "Package: ca-certificates-bundle\nLicense: MIT\nSeverity: LOW\n"
                    }
                }
            ]
        }
    ]
}